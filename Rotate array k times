Given an integer array nums, rotate the array to the right by k steps, where k is non-negative.

 

Example 1:

Input: nums = [1,2,3,4,5,6,7], k = 3
Output: [5,6,7,1,2,3,4]
Explanation:
rotate 1 steps to the right: [7,1,2,3,4,5,6]
rotate 2 steps to the right: [6,7,1,2,3,4,5]
rotate 3 steps to the right: [5,6,7,1,2,3,4]
Example 2:

Input: nums = [-1,-100,3,99], k = 2
Output: [3,99,-1,-100]
Explanation: 
rotate 1 steps to the right: [99,-1,-100,3]
rotate 2 steps to the right: [3,99,-1,-100]
 

Constraints:

1 <= nums.length <= 105
-231 <= nums[i] <= 231 - 1
0 <= k <= 105


code

#include <iostream>
#include<vector>
using namespace std;
void display(vector<int> &v)
{
    for(int i=0;i<=v.size()-1;i++)
    {
        cout<<v[i];
    }
    cout<<endl;
}
void reverse(int i, int j, vector<int> &v)
{ 
    while(i<=j)
    {
      int temp=v[i];
      v[i]=v[j];
      v[j]=temp;
      i++;
      j--;
    }  
}

int main() 
{
    
   
    vector<int> v;
    
    int n;
    cin>>n;
    for(int i=0;i<=n-1;i++)
    {
        int q;
        cin>>q;
        v.push_back(q);
        
    }
    int k;
    cin>>k;
  display(v);
  reverse(0,n-k-1,v);
  display(v);
   reverse(n-k,n-1,v);
   display(v);
    reverse(0,n-1,v);
  display(v);
  return 0;
}
